<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfigConductorView_Title" xml:space="preserve">
    <value>Framework Configuration</value>
  </data>
  <data name="ConfigConductorView_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ConfigConductorView_SaveAndRestart" xml:space="preserve">
    <value>Save and restart</value>
  </data>
  <data name="ConfigShellView_Title" xml:space="preserve">
    <value>Client Configurator</value>
  </data>
  <data name="AppConfigView_App_Title" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="AppConfigView_Name_Label" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="AppConfigView_Name_Description" xml:space="preserve">
    <value>(Personal name of this application, e.g. ControlSystem)</value>
  </data>
  <data name="AppConfigView_Application_Label" xml:space="preserve">
    <value>Application:</value>
  </data>
  <data name="AppConfigView_Application_Description" xml:space="preserve">
    <value>(Name in UserManagement for this application)</value>
  </data>
  <data name="AppConfigView_ViewType_Label" xml:space="preserve">
    <value>View type:</value>
  </data>
  <data name="AppConfigView_ViewType_Description" xml:space="preserve">
    <value>(View type for this application)</value>
  </data>
  <data name="AppConfigView_Startup_Title" xml:space="preserve">
    <value>Startup</value>
  </data>
  <data name="AppConfigView_RunMode_Label" xml:space="preserve">
    <value>Mode:</value>
  </data>
  <data name="AppConfigView_RunMode_Description" xml:space="preserve">
    <value>(Selects the mode how the frame should be loaded)</value>
  </data>
  <data name="AppConfigView_Ctrl_Label" xml:space="preserve">
    <value>Config CTRL:</value>
  </data>
  <data name="AppConfigView_Ctrl_Description" xml:space="preserve">
    <value>(Will enable that the configurator opens if you press CTRL at startup)</value>
  </data>
  <data name="AppConfigView_LimitInstances_Label" xml:space="preserve">
    <value>Limit Instances:</value>
  </data>
  <data name="AppConfigView_LimitInstances_Description" xml:space="preserve">
    <value>(If enabled, instances of this application will be limited to one)</value>
  </data>
  <data name="AppConfigView_System_Title" xml:space="preserve">
    <value>System Info</value>
  </data>
  <data name="AppConfigView_UserName_Label" xml:space="preserve">
    <value>UserName:</value>
  </data>
  <data name="AppConfigView_Fullname_Label" xml:space="preserve">
    <value>Fullname:</value>
  </data>
  <data name="AppConfigView_ConfigFolder_Label" xml:space="preserve">
    <value>Config Folder:</value>
  </data>
  <data name="AppConfigView_AppData_Label" xml:space="preserve">
    <value>AppData:</value>
  </data>
  <data name="AppConfigView_RunMode_Hint" xml:space="preserve">
    <value>If you have selected a RunMode you can open the configurator again with the command line argument "--configurator" or press CTRL at startup.</value>
  </data>
  <data name="AppConfigViewModel_Title" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="ProxyConfigViewModel_Title" xml:space="preserve">
    <value>Proxy</value>
  </data>
  <data name="ProxyConfigView_Proxy_Title" xml:space="preserve">
    <value>Proxy Configuration</value>
  </data>
  <data name="ProxyConfigView_Enabled_Label" xml:space="preserve">
    <value>Enabled:</value>
  </data>
  <data name="ProxyConfigView_Enabled_Description" xml:space="preserve">
    <value>(Enables the proxy for this client)</value>
  </data>
  <data name="ProxyConfigView_UseDefault_Label" xml:space="preserve">
    <value>Use Default:</value>
  </data>
  <data name="ProxyConfigView_UseDefault_Description" xml:space="preserve">
    <value>(Selects the global configured proxy settings)</value>
  </data>
  <data name="ProxyConfigView_Address_Label" xml:space="preserve">
    <value>Address:</value>
  </data>
  <data name="ProxyConfigView_Address_Description" xml:space="preserve">
    <value>(Address to the proxy server)</value>
  </data>
  <data name="ProxyConfigView_Port_Label" xml:space="preserve">
    <value>Port:</value>
  </data>
  <data name="ProxyConfigView_Port_Description" xml:space="preserve">
    <value>(Port of the proxy server)</value>
  </data>
  <data name="RuntimeConfigViewModel_Title" xml:space="preserve">
    <value>Runtime</value>
  </data>
  <data name="RuntimeConfigView_Runtime_Title" xml:space="preserve">
    <value>Runtime Configuration</value>
  </data>
  <data name="RuntimeConfigView_Hostname_Label" xml:space="preserve">
    <value>Hostname:</value>
  </data>
  <data name="RuntimeConfigView_Hostname_Description" xml:space="preserve">
    <value>(Where do we can find the runtime (e.g. "localhost")?)</value>
  </data>
  <data name="RuntimeConfigView_Port_Label" xml:space="preserve">
    <value>Port:</value>
  </data>
  <data name="RuntimeConfigView_Port_Description" xml:space="preserve">
    <value>(On which port?)</value>
  </data>
  <data name="RuntimeConfigView_ClientId_Label" xml:space="preserve">
    <value>Client Id:</value>
  </data>
  <data name="RuntimeConfigView_ClientId_Description" xml:space="preserve">
    <value>(Unique id to register at the server wcf services)</value>
  </data>
  <data name="LocalizationView_Title" xml:space="preserve">
    <value>Localization</value>
  </data>
  <data name="LocalizationView_Culture" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LocalizationView_Culture_Description" xml:space="preserve">
    <value>(Selected culture for this application)</value>
  </data>
  <data name="LocalizationViewModel_Title" xml:space="preserve">
    <value>Localization</value>
  </data>
  <data name="ConfigConductorViewModel_ConfigsSaved_Title" xml:space="preserve">
    <value>All configs saved!</value>
  </data>
  <data name="ConfigConductorViewModel_ConfigsSaved_Message" xml:space="preserve">
    <value>All configurations are successfully saved!</value>
  </data>
</root>
